#SimpleDotCom
DECLARE an int array to hold the location cells. Call it locationsCells.
DECLARE an int to hold number of hits. Call it numOfHits and set it to 0.

DECLARE a checkYourself() method that takes a String for the users guess, checks it and return's a result representing hit, miss or kill.
DECLARE a setLocationCells() setter method that takes an int array.

METHOD: String checkYourself(String usersGuess)
    GET the user guess as a string parameter
    CONVERT the user guess to an int
    REPEAT with each of the location cells in the int array
        // COMPARE the user guess to the location cell
        IF the user guess matches
          INCREMENT the number of hits
          // FIND OUT if it was the last location cell
          IF numbers of hits is 3. RETURN "kill" as the result
          ELSE it was not a kill. RETURN "hit"
        ELSE the user guess did not match, so return "miss"

METHOD: void setLocationCells(int[] cellLocations)
    GET the cell locations as an int array parameter
    ASSIGN the cell locations parameter to the cell locations instance variable


#SimpleDotComGame
METHOD: public static void main(String[] args)
    DECLARE an int variable to hold the number of user guesses named numOfGuesses
    CREATE a single SimpleDotCom object
    DECLARE an int array of length 3 to hold the DotCom cell locations. Call it locationsCells
    COMPUTE a random number between 0 and 4 that will be the starting cell location
    INITIALIZE locationsCells with the computed random number along with 2 consecutive numbers
    DECLARE a String variable to hold the String returned by checkYourself. Call it result and give it initial value 'Miss'
    WHILE the dot com is still alive:
      GET user input from command line
      CHECK the user input by calling checkYourself on the SimpleDotCom object
      UPDATE the result variable with the value returned by checkYourself

    TELL user how many guesses they took
